/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAppByIdV1AppAppIdGetRequest = {
  /**
   * The unique identifier of the app to retrieve
   */
  appId: string;
};

/** @internal */
export const GetAppByIdV1AppAppIdGetRequest$inboundSchema: z.ZodType<
  GetAppByIdV1AppAppIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  app_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "app_id": "appId",
  });
});

/** @internal */
export type GetAppByIdV1AppAppIdGetRequest$Outbound = {
  app_id: string;
};

/** @internal */
export const GetAppByIdV1AppAppIdGetRequest$outboundSchema: z.ZodType<
  GetAppByIdV1AppAppIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetAppByIdV1AppAppIdGetRequest
> = z.object({
  appId: z.string(),
}).transform((v) => {
  return remap$(v, {
    appId: "app_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAppByIdV1AppAppIdGetRequest$ {
  /** @deprecated use `GetAppByIdV1AppAppIdGetRequest$inboundSchema` instead. */
  export const inboundSchema = GetAppByIdV1AppAppIdGetRequest$inboundSchema;
  /** @deprecated use `GetAppByIdV1AppAppIdGetRequest$outboundSchema` instead. */
  export const outboundSchema = GetAppByIdV1AppAppIdGetRequest$outboundSchema;
  /** @deprecated use `GetAppByIdV1AppAppIdGetRequest$Outbound` instead. */
  export type Outbound = GetAppByIdV1AppAppIdGetRequest$Outbound;
}

export function getAppByIdV1AppAppIdGetRequestToJSON(
  getAppByIdV1AppAppIdGetRequest: GetAppByIdV1AppAppIdGetRequest,
): string {
  return JSON.stringify(
    GetAppByIdV1AppAppIdGetRequest$outboundSchema.parse(
      getAppByIdV1AppAppIdGetRequest,
    ),
  );
}

export function getAppByIdV1AppAppIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAppByIdV1AppAppIdGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAppByIdV1AppAppIdGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAppByIdV1AppAppIdGetRequest' from JSON`,
  );
}
