/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Successful Response
 */
export type PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost =
  | components.CompletionsStreamingResponse
  | components.CompletionResponse;

/** @internal */
export const PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$inboundSchema:
  z.ZodType<
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost,
    z.ZodTypeDef,
    unknown
  > = z.union([
    components.CompletionsStreamingResponse$inboundSchema,
    components.CompletionResponse$inboundSchema,
  ]);

/** @internal */
export type PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$Outbound =
  | components.CompletionsStreamingResponse$Outbound
  | components.CompletionResponse$Outbound;

/** @internal */
export const PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$outboundSchema:
  z.ZodType<
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$Outbound,
    z.ZodTypeDef,
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost
  > = z.union([
    components.CompletionsStreamingResponse$outboundSchema,
    components.CompletionResponse$outboundSchema,
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$ {
  /** @deprecated use `PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$inboundSchema` instead. */
  export const inboundSchema =
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$inboundSchema;
  /** @deprecated use `PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$outboundSchema` instead. */
  export const outboundSchema =
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$outboundSchema;
  /** @deprecated use `PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$Outbound` instead. */
  export type Outbound =
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$Outbound;
}

export function postCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPostToJSON(
  postCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost:
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost,
): string {
  return JSON.stringify(
    PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$outboundSchema
      .parse(
        postCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost,
      ),
  );
}

export function postCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPostFromJSON(
  jsonString: string,
): SafeParseResult<
  PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'PostCompletionsV1ChatCompletionsPostResponsePostCompletionsV1ChatCompletionsPost' from JSON`,
  );
}
