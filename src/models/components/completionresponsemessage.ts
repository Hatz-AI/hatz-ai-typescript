/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The role of the message sender
 */
export const CompletionResponseMessageRole = {
  Assistant: "assistant",
} as const;
/**
 * The role of the message sender
 */
export type CompletionResponseMessageRole = ClosedEnum<
  typeof CompletionResponseMessageRole
>;

export type CompletionResponseMessage = {
  /**
   * The content of the response message
   */
  content: string;
  /**
   * The role of the message sender
   */
  role?: "assistant" | undefined;
};

/** @internal */
export const CompletionResponseMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof CompletionResponseMessageRole
> = z.nativeEnum(CompletionResponseMessageRole);

/** @internal */
export const CompletionResponseMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof CompletionResponseMessageRole
> = CompletionResponseMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompletionResponseMessageRole$ {
  /** @deprecated use `CompletionResponseMessageRole$inboundSchema` instead. */
  export const inboundSchema = CompletionResponseMessageRole$inboundSchema;
  /** @deprecated use `CompletionResponseMessageRole$outboundSchema` instead. */
  export const outboundSchema = CompletionResponseMessageRole$outboundSchema;
}

/** @internal */
export const CompletionResponseMessage$inboundSchema: z.ZodType<
  CompletionResponseMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.string(),
  role: z.literal("assistant").optional(),
});

/** @internal */
export type CompletionResponseMessage$Outbound = {
  content: string;
  role: "assistant";
};

/** @internal */
export const CompletionResponseMessage$outboundSchema: z.ZodType<
  CompletionResponseMessage$Outbound,
  z.ZodTypeDef,
  CompletionResponseMessage
> = z.object({
  content: z.string(),
  role: z.literal("assistant").default("assistant"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CompletionResponseMessage$ {
  /** @deprecated use `CompletionResponseMessage$inboundSchema` instead. */
  export const inboundSchema = CompletionResponseMessage$inboundSchema;
  /** @deprecated use `CompletionResponseMessage$outboundSchema` instead. */
  export const outboundSchema = CompletionResponseMessage$outboundSchema;
  /** @deprecated use `CompletionResponseMessage$Outbound` instead. */
  export type Outbound = CompletionResponseMessage$Outbound;
}

export function completionResponseMessageToJSON(
  completionResponseMessage: CompletionResponseMessage,
): string {
  return JSON.stringify(
    CompletionResponseMessage$outboundSchema.parse(completionResponseMessage),
  );
}

export function completionResponseMessageFromJSON(
  jsonString: string,
): SafeParseResult<CompletionResponseMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CompletionResponseMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CompletionResponseMessage' from JSON`,
  );
}
