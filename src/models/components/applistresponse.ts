/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AppResponse,
  AppResponse$inboundSchema,
  AppResponse$Outbound,
  AppResponse$outboundSchema,
} from "./appresponse.js";

export type AppListResponse = {
  /**
   * The list of apps
   */
  data: Array<AppResponse>;
};

/** @internal */
export const AppListResponse$inboundSchema: z.ZodType<
  AppListResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(AppResponse$inboundSchema),
});

/** @internal */
export type AppListResponse$Outbound = {
  data: Array<AppResponse$Outbound>;
};

/** @internal */
export const AppListResponse$outboundSchema: z.ZodType<
  AppListResponse$Outbound,
  z.ZodTypeDef,
  AppListResponse
> = z.object({
  data: z.array(AppResponse$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppListResponse$ {
  /** @deprecated use `AppListResponse$inboundSchema` instead. */
  export const inboundSchema = AppListResponse$inboundSchema;
  /** @deprecated use `AppListResponse$outboundSchema` instead. */
  export const outboundSchema = AppListResponse$outboundSchema;
  /** @deprecated use `AppListResponse$Outbound` instead. */
  export type Outbound = AppListResponse$Outbound;
}

export function appListResponseToJSON(
  appListResponse: AppListResponse,
): string {
  return JSON.stringify(AppListResponse$outboundSchema.parse(appListResponse));
}

export function appListResponseFromJSON(
  jsonString: string,
): SafeParseResult<AppListResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => AppListResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'AppListResponse' from JSON`,
  );
}
