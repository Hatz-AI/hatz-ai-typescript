/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { appsQuery } from "../../funcs/appsQuery.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.QueryAppV1AppAppIdQueryPostRequest$inboundSchema,
};

export const tool$appsQuery: ToolDefinition<typeof args> = {
  name: "apps-query",
  description: `Query App

Post a completion request to the ai model given an app id and set of inputs.

Inputs are usually in the form of JSON object like:

\`{'<variable_name>': '<value>'}\` 

Example: \`{'name': 'John', 'age': 25}\`


The variable name should be the same as the variable name in the app.

Returns:

    - StreamingResponse when request.stream=True

    - CompletionResponse when request.stream=False`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await appsQuery(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
